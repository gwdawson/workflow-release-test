name: release workflow

on:
  push:
    branches:
      - main

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version-check.outputs.changed }}
      version: ${{ steps.version-check.outputs.version }}
    steps:
      - name: Fetch codebase
        uses: actions/checkout@v4

      - name: Check for version change
        id: version-check
        uses: EndBug/version-check@v2
        with:
          diff-search: true

  release:
    runs-on: ubuntu-latest
    needs: version-check
    if: needs.version-check.outputs.version_changed == 'true'
    steps:
      - name: Fetch codebase
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: Test application
        run: echo "TODO - Add tests"

      - name: Extract changelog
        run: |
          VERSION=${{ needs.version-check.outputs.version }}
          sed -n "/## \[v${VERSION}\]/,/## \[v/p" CHANGELOG.md | sed '1d;$d' > release_notes.txt

          if [ ! -s release_notes.txt ]; then
            echo "No release notes available for $VERSION." > release_notes.txt
          fi

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version-check.outputs.version }}
          release_name: v${{ needs.version-check.outputs.version }}
          body_path: release_notes.txt
