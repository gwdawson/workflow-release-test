name: workflows

on:
  push:
    branches:
      - main

jobs:
  pre-release:
    name: pre-release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-check.outputs.version }}
      version_changed: ${{ steps.version-check.outputs.changed }}
    steps:
      - name: Fetch codebase
        uses: actions/checkout@v4
      - name: Check version
        id: version-check
        uses: EndBug/version-check@v2
        with:
          diff-search: true

  release:
    name: pre-release / release
    needs: pre-release
    runs-on: ubuntu-latest
    if: needs.pre-release.outputs.version_changed == 'true'
    steps:
      - name: Fetch codebase
        uses: actions/checkout@v4
      - name: Install dependencies
        run: yarn install
      - name: Build application
        run: yarn build
      - name: Extract release notes
        run: |
          VERSION=${{ needs.pre-release.outputs.version }}
          sed -n "/## \[v${VERSION}\]/,/## \[v/p" CHANGELOG.md | sed '1d;$d' > release_notes.txt
          if [ ! -s release_notes.txt ]; then
            echo "No release notes available for v$VERSION" > release_notes.txt
          fi
      - name: Publish release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.pre-release.outputs.version }}
          release_name: v${{ needs.pre-release.outputs.version }}
          body_path: release_notes.txt

  deploy:
    name: pre-release / deploy
    needs: [pre-release, release]
    runs-on: ubuntu-latest
    if: needs.pre-release.outputs.version_changed == 'true'
    steps:
      - name: Deploy release
        run: echo "Deploying release to VPS"
