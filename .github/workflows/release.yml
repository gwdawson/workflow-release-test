name: workflows

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      version_changed: ${{ steps.version-check.outputs.changed }}

    steps:
      - name: fetch codebase
        uses: actions/checkout@v4

      - name: check version
        id: version-check
        uses: EndBug/version-check@v2
        with:
          diff-search: true

      - name: install dependencies
        if: steps.version-check.outputs.changed == 'true'
        run: yarn install

      - name: build application
        if: steps.version-check.outputs.changed == 'true'
        run: yarn build

      - name: extract release notes
        if: steps.version-check.outputs.changed == 'true'
        run: |
          VERSION=${{ steps.version-check.outputs.version }}
          sed -n "/## \[v${VERSION}\]/,/## \[v/p" CHANGELOG.md | sed '1d;$d' > release_notes.txt || echo "No release notes available v$VERSION" > release_notes.txt

      - name: publish release
        if: steps.version-check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.version }}
          release_name: v${{ steps.version-check.outputs.version }}
          body_path: release_notes.txt

  deploy:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.version_changed == 'true'

    steps:
      - name: TEST
        run: echo "Deploying release to VPS"
